# debug: true
name: PDK Object Detection Demo
workspace: Andrew
project: PDK Demo
# bind_mounts:
#     - host_path: /run/determined/workdir/shared_fs/
#       container_path: /tmp/data/
#       read_only: true
profiling:
 enabled: true
 begin_on_batch: 0
 end_after_batch: null
hyperparameters:
    lr: 0.01
    momentum: 0.9
    global_batch_size: 16
    weight_decay: 1.0e-4
    gamma: 0.1 # This is the decay that occurs after each milestone step (i.e. step1, step2)
    warmup: linear
    warmup_iters: 200 # incrementally increase the lr, warm up learn rate from [lr*warmup_ratio to lr] (0.02*0.001 to 0.02)
    warmup_ratio: 0.1 # The fraction between 0-1 that defines the percentage of lr you want to start the lr at
    pretrained_model: "/lus/aiholus1/disk/andrew.mendez/frcnn_xview.pth"
    finetune_ckpt: null
    # finetune_ckpt: 
    #     3: "/lus/aiholus1/disk/andrew.mendez/model_479.pth"
    #     4: "/lus/aiholus1/disk/andrew.mendez/model_399_3_class.pth"
    step1: 504 # 14 epochs: 14*36 == 504
    step2: 540 # 15 epochs: 15*36 == 540
    model: fasterrcnn_resnet50_fpn
    # Dataset
    dataset_file: coco
    backend: local # specifiy the backend you want to use.  one of: gcs, aws, fake, local
    data_dir: "/lus/aiholus1/disk/andrew.mendez/xview_2class_full/" # bucket name if using gcs or aws, otherwise directory to dataset
    masks: false
    num_workers: 4
    device: cuda
environment:
    image: mendeza/obj-det-pdk-train-env:0.0.2
    environment_variables:                                                                          
        - NCCL_DEBUG=INFO                                                                           
        # You may need to modify this to match your network configuration.                          
        - NCCL_SOCKET_IFNAME=ens,eth,ib

scheduling_unit: 100
min_validation_period:
    epochs: 1 # For training

searcher:
  name: single
  metric: mAP
  smaller_is_better: True
  max_length:
    epochs: 50 # 2 batches/epoch * 50 epochs = 100 batches
resources:
    slots_per_trial: 1
    shm_size: 2000000000
max_restarts: 0